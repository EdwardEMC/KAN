{"version":3,"sources":["components/utils/GlobalState.js","components/Wrapper/index.js","components/Logo/index.js","components/utils/API.js","components/Login/index.js","pages/Login.js","components/utils/register.js","components/Register/index.js","pages/Register.js","components/Header/index.js","pages/Description.js","components/ProfileInsert/index.js","pages/Profile.js","pages/MyPlaces.js","pages/MyTopics.js","components/ForumInsert/index.js","pages/Forum/Forum.js","pages/Forum/Subforum.js","components/PostComment/index.js","pages/Forum/Topic.js","pages/Forum/PostTopic.js","components/UserProfiles/index.js","pages/OtherUsers.js","components/MapContent/index.js","components/MapOnline/index.js","components/MapPoI/index.js","components/GoogleMap/index.js","pages/Mapcomp.js","components/ChatBox/index.js","components/ChatMessage/index.js","components/ChatArea/index.js","pages/Chats.js","pages/Search.js","components/UserSettings/index.js","pages/Settings.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","Provider","reducer","state","action","type","user","StoreProvider","value","props","useReducer","dispatch","Wrapper","className","children","Logo","to","id","src","alt","axios","get","withCredentials","userName","category","TopicId","data","post","console","log","put","delete","LoginForm","history","useHistory","htmlFor","required","placeholder","onClick","event","preventDefault","emailInput","document","getElementById","passwordInput","API","then","result","find","element","email","innerHTML","userData","trim","password","push","catch","err","Login","Component","handleLoginErr","RegisterUser","userNameInput","phoneInput","nameInput","generalInput","terms","checked","phone","name","generalInformation","window","location","replace","signUpUser","RegisterForm","Register","Header","iconPath","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","Description","ProfileInsert","currentUser","readOnly","Profile","useState","setUser","useEffect","MyPlaces","MyTopics","ForumInsert","Forum","Subforum","topics","setTopics","split","getTopics","map","key","title","description","User","pathname","topic","PostComment","commentInput","topicId","reload","Topic","comments","setComments","match","params","handle","createdAt","PostTopic","UserInsert","OtherUsers","userProfile","poiPath","MapContent","selectedPlace","setSelectedPlace","infoOpen","setInfoOpen","markerMap","setMarkerMap","myPlaces","setMyPlaces","iconSelection","getMarkers","displayMarkers","place","clusterer","icon","lat","position","parseFloat","lng","onLoad","marker","prevState","markerLoadHandler","markerClickHandler","userPath","anchor","onCloseClick","MapOnline","userPosition","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","zoom","online","pos","draggable","onDragEnd","latLng","MapPoI","GoogleMaps","center","setCenter","icons","setIcons","onMapLoad","loadedMap","centerChanged","mapType","onChange","selection","onCenterChanged","MapComp","googleMapsApiKey","GoogleMap","ChatBox","chatName","data-id","user1","current","user2","ChatMessage","messageHistory","area","messages","li","createElement","span","message","UserId","setAttribute","append","displayMessages","x","roomInternal","active","roomListener","val","this","registerListener","listener","socket","io","process","PORT","emit","room","on","msg","autoComplete","ChatArea","chats","setChats","logged","setLogged","setActive","chatId","setChatId","activate","currentTarget","getAttribute","Chats","Search","UserSettings","infoInput","updateUser","Settings","Footer","NavRoutes","exact","path","component","App","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.98392e4b.chunk.js","sourcesContent":["// end up using this for dark mode?\r\n\r\nimport React, { createContext, useReducer, useContext } from \"react\";\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n  case \"SET_USER\":\r\n    // console.log(action.user)\r\n    return {\r\n      ...state,\r\n      user: [action.user]\r\n    }\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    user:[]\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Link to=\"/description\" >\r\n        <img id=\"logoImage\" src=\"\" alt=\"KAN logo\"/>\r\n      </Link >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo;","import axios from \"axios\";\r\n\r\n// axios.defaults.withCredentials = true\r\n\r\nexport default {\r\n  //============================================\r\n  // GET REQUESTS\r\n  //============================================\r\n\r\n  // gets all current users data\r\n  getUsers: function() {\r\n    return axios.get(\"/api/user\", { withCredentials: true });\r\n  },\r\n\r\n  // gets the current users data\r\n  getUser: function() {\r\n    return axios.get(\"/api/user/id\", { withCredentials: true });\r\n  },\r\n\r\n  // loads a users profile from the map\r\n  getProfile: function(userName) {\r\n    return axios.get(\"/api/user/\" + userName);\r\n  },\r\n\r\n  // gets all topics relating to the subforum\r\n  getTopics: function(category) {\r\n    return axios.get(\"/api/topics/\" + category);\r\n  },\r\n\r\n  // gets all comments about a certain topic\r\n  getComments: function(TopicId) {\r\n    return axios.get(\"/api/comments/\" + TopicId);\r\n  },\r\n\r\n  getAllMarkers: function() {\r\n    return axios.get(\"/api/markers\");\r\n  },\r\n\r\n  getChats: function() {\r\n    return axios.get(\"/api/chats\");\r\n  },\r\n\r\n  getMessages: function(data) {\r\n    return axios.get(\"/api/messages/\" + data);\r\n  },\r\n\r\n  logOut: function(data) {\r\n    return axios.get(\"/logout\");\r\n  },\r\n\r\n  //============================================\r\n  // POST REQUESTS\r\n  //============================================\r\n\r\n  // checks a user logining in\r\n  loginCheck: function(data) {\r\n    return axios.post(\"/api/login\", data);\r\n  },\r\n\r\n  // Saves a new user to the database\r\n  newUser: function(data) {\r\n    return axios.post(\"/api/register\", data); \r\n  },\r\n\r\n  // Posting a new topic to a forum\r\n  newTopic: function(data) {\r\n    return axios.post(\"/api/topic\", data); \r\n  },\r\n\r\n  // Posting a comment to a topic\r\n  newComment: function(data) {\r\n    return axios.post(\"/api/topic/comment\", data);\r\n  },\r\n\r\n  setPoIMarker: function(data) {\r\n    return axios.post(\"/api/user/PoI\", data);\r\n  },\r\n\r\n  newChat: function(data) {\r\n    return axios.post(\"/api/user/chats\", data);\r\n  },\r\n\r\n  // Updates the active chats message history\r\n  sendMessage: function(data) {\r\n    console.log(data, \"CLIENT API\")\r\n    return axios.post(\"/api/messages/\", data);\r\n  },\r\n\r\n  //============================================\r\n  // PUT REQUESTS\r\n  //============================================\r\n\r\n  // Updates a user on the database\r\n  updateUser: function(data) {\r\n    return axios.put(\"/api/user\", data);\r\n  },\r\n\r\n  // Updates a user with their online marker\r\n  setOnlineMarker: function(data) {\r\n    return axios.put(\"/api/user/online\", data);\r\n  },\r\n\r\n  //============================================\r\n  // DELETE REQUESTS\r\n  //============================================\r\n\r\n  // Deletes a user\r\n  deleteUser: function() {\r\n    return axios.delete(\"/api/user\");\r\n  }\r\n};","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport \"./style.css\";\r\n\r\nfunction LoginForm() {\r\n  let history = useHistory();\r\n  \r\n  const LoginSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n  \r\n    // Getting references to our form and inputs\r\n    var emailInput = document.getElementById(\"email-input\");\r\n    var passwordInput = document.getElementById(\"password-input\");\r\n  \r\n    API.getUsers(\"/api/user\")\r\n      .then(function(result) {\r\n        const users = result.data;\r\n        const pass = users.find(element => element.email === emailInput.value);\r\n        if(pass) {    \r\n          // The user record in database does not have a charity key or a charity key was not entered so it is a regular user\r\n          const userData = {\r\n            email: emailInput.value.trim(),\r\n            password: passwordInput.value.trim(),\r\n          };    \r\n          // If we have an email and password we run the loginUser function and clear the form\r\n          if (!userData.email || !userData.password) {\r\n            return;\r\n          }\r\n          else {\r\n            userCheck(userData.email, userData.password)\r\n          }\r\n        }\r\n        else {\r\n          // entered email ID is not found in database\r\n          emailInput.value = \"\";\r\n          passwordInput.value = \"\";\r\n          document.getElementById(\"errorMsg\").innerHTML = \"Email does not exist!\";\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  function userCheck(email, password) {\r\n    API.loginCheck({\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then(result => {\r\n      console.log(result);\r\n    }).then(function(){\r\n      history.push('/profile')\r\n    })\r\n    .catch(err => console.log(err)); // If there's an error, log the error\r\n  }\r\n\r\n  return(\r\n    <form className=\"login\">\r\n        <br></br>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email-input\">Email</label>\r\n          <input id=\"email-input\" className=\"input form-control\" type=\"text\" required placeholder=\"john.doe@gmail.com\"/>\r\n          <p id=\"noEmail\"></p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password-input\">Password</label>\r\n          <input id=\"password-input\" className=\"input form-control\" type=\"password\" required placeholder=\"********\"/>\r\n          <p id=\"noPassword\"></p>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"text-center\">\r\n          <button onClick={LoginSubmit} className=\"btn btn-success\">\r\n          Submit\r\n          </button>\r\n          <p className=\"help\" id=\"errorMsg\"></p>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p>Don't have a account? Sign up &nbsp; \r\n            <Link to=\"/register\"> \r\n              here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport Logo from \"../components/Logo\";\r\nimport LoginForm from \"../components/Login\";\r\nimport \"./style.css\";\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <br></br>\r\n        <Logo />\r\n        <br></br>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <h2 className=\"text-center card-header colorHeader\">\r\n              Login\r\n            </h2>\r\n            <div className=\"card-body colorBody\">\r\n              <LoginForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import API from \"../utils/API\";\n\n// When the signup button is clicked, we validate the username, name, email & password are not blank\nfunction RegisterUser(event) {\n  event.preventDefault();\n\n  // remove error messages if users has filled in required now\n  document.getElementById(\"checked\").innerHTML = \"\";\n\n  // collecting the form information\n  const userNameInput = document.getElementById(\"userName-input\");\n  const phoneInput = document.getElementById(\"phoneNumber-input\");\n  const nameInput = document.getElementById(\"name-input\");\n  const emailInput = document.getElementById(\"email-input\");\n  const generalInput = document.getElementById(\"information-input\")\n  const passwordInput = document.getElementById(\"password-input\");\n  const terms = document.getElementById(\"terms\").checked;\n  \n  const userData = {\n    userName: userNameInput.value.trim(),\n    email: emailInput.value.trim(),\n    phone: phoneInput.value.trim(),\n    name: nameInput.value.trim(),\n    generalInformation: generalInput.value.trim(),\n    password: passwordInput.value.trim(),\n  };\n\n  if(terms===false) {\n    document.getElementById(\"checked\").innerHTML = \"**Please read the Terms & Conditions**\";\n    return;\n  }\n\n  // check if all the data is filled and the terms box is checked\n  if (!userData.userName || !userData.email || !userData.name || !userData.password) {\n    return;\n  }\n\n  // If we have a username, name, email & password, run the signUpUser function\n  signUpUser(userData.userName, userData.email, userData.phone, userData.name, userData.generalInformation, userData.password);\n  userNameInput.value = \"\";\n  emailInput.value = \"\";\n  phoneInput.value = \"\";\n  nameInput.value = \"\";\n  generalInput.value = \"\";\n  passwordInput.value = \"\";\n};\n\n// Does a post to the signup route. If successful, we are redirected to the user's home page\n// Otherwise we log any errors\nfunction signUpUser(userName, email, phone, name, generalInformation, password) {\n  const data = {\n    userName: userName,\n    email: email,\n    phone: phone,\n    name: name,\n    generalInformation: generalInformation,\n    password: password,\n  };\n    console.log(data);\n    API.newUser(data)\n    .then(result => {\n      // console.log(result);\n      // work out how to redirect within react\n      window.location.replace(\"/\");\n    }) // If there's an error, handle it by throwing up a bootstrap alert\n    .catch(handleLoginErr);     \n}\n\nfunction handleLoginErr(err) {\n  console.log(err)\n\tdocument.getElementById(\"emailInUse\").innerHTML = \"Email already in use\";\n}\n\nexport default RegisterUser;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegisterUser from \"../utils/register\";\r\nimport \"./style.css\";\r\n\r\nfunction RegisterForm() {\r\n  return (\r\n    <form className=\"signup-user\">\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"userName-input\">Username</label>\r\n          <input id=\"userName-input\" className=\"input form-control\" type=\"text\" required placeholder=\"Username.....\"/>\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"email-input\">Email</label>\r\n          <input className=\"input form-control\" id=\"email-input\" type=\"email\" required placeholder=\"alex@smith.com\"/>\r\n          <p id=\"emailInUse\"></p>\r\n        </div>\r\n      </div> \r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"phoneNumber-input\">Phone Number</label>\r\n          <input className=\"input form-control\" id=\"phoneNumber-input\" type=\"number\" required placeholder=\"Your phone number.....\"/>\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"name-input\">Name</label>\r\n          <input  id=\"name-input\" className=\"input form-control\" type=\"text\" required placeholder=\"Name.....\"/>\r\n          <br></br>\r\n        </div>\r\n      </div> \r\n      <div className=\"form-row\">  \r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"information-input\">General Information</label>\r\n          <textarea  id=\"information-input\" className=\"input form-control\" type=\"text\" placeholder=\"General Information.....\"/> \r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label className=\"label\">Password</label>\r\n          <input className=\"input form-control\" id=\"password-input\" type=\"password\" required placeholder=\"Password.....\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-check\">\r\n          <input type=\"checkbox\" className=\"form-check-input\" id=\"terms\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"terms\">I have read the \r\n            <Link to=\"/terms\">\r\n              terms & conditions\r\n            </Link>\r\n          </label>\r\n          <p id=\"checked\"></p>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <div className=\"text-center\">\r\n        <button onClick={RegisterUser} className=\"btn btn-primary\">  {/*fix to show if username or email is already in use*/}\r\n        Submit\r\n        </button>\r\n      </div>\r\n      <p id=\"errorMsg\"></p>\r\n      <br></br>\r\n      <div className=\"text-center\">\r\n        <p>Already have an account? Login &nbsp; \r\n          <Link to=\"/\"> \r\n            here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport Logo from \"../components/Logo\";\r\nimport RegisterForm from \"../components/Register\";\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <br></br>\r\n        <Logo />\r\n        <br></br>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <h2 className=\"text-center card-header colorHeader\">\r\n              New Registration\r\n            </h2>\r\n            <div className=\"card-body colorBody\">\r\n              <RegisterForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo\";\r\nimport \"./style.css\";\r\nimport API from \"../utils/API\";\r\n\r\nconst iconPath = process.env.PUBLIC_URL + '/assets/HeaderIcons/';\r\n\r\nfunction Header() {\r\n\r\n  function logout() {\r\n    // trigger updating online lat/lng values to null\r\n    API.logOut()\r\n    .then(function() {\r\n      // using href instead of history as href will refresh the page and disconnect any sockets automatically\r\n      window.location.href=\"/\";\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  return ( \r\n    <div id=\"header\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 text-center\" id=\"markers\">\r\n          <div id=\"online\">\r\n            <Link to=\"/mapType/setOnline\">\r\n              <img className=\"markerImages\" src={iconPath + \"online.png\"} alt=\"online marker\" />\r\n            </Link>\r\n          </div>\r\n          &emsp;\r\n          &emsp;\r\n          &emsp;\r\n          <div id=\"poi\">\r\n            <Link to=\"/mapType/setPoI\">\r\n              <img className=\"markerImages\" src={iconPath + \"poi.png\"} alt=\"place of interest\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 text-center\" id=\"logo\">\r\n          <Logo />\r\n        </div>\r\n        <div className=\"dropdown menu col-sm-4 text-center\">\r\n          <button className=\"btn btn-success dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Main Menu\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <p className=\"dropdown-item\">\r\n              <Link to=\"/mapType/map\"> \r\n                Map\r\n              </Link>\r\n            </p>\r\n            <p className=\"dropdown-item\">\r\n              <Link to=\"/forums\"> \r\n                Forums\r\n              </Link>\r\n            </p>\r\n            <p className=\"dropdown-item\">\r\n              <Link to=\"/chats\"> \r\n                Chats\r\n              </Link>\r\n            </p>\r\n            <p className=\"dropdown-item\">\r\n              <Link to=\"/profile\"> \r\n                Profile\r\n              </Link>\r\n            </p>\r\n            <p className=\"dropdown-item\">\r\n              <Link to=\"/settings\"> \r\n                Settings\r\n              </Link>\r\n            </p>\r\n            <p className=\"dropdown-item\">\r\n              <button className=\"btn btn-warning\" onClick={logout}>Log Out</button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass Description extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <p>Description</p>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default Description;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction ProfileInsert(props) {  \r\n  return (\r\n    <div className=\"container mainWin\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header colorHeader text-center\">\r\n          <h3 id=\"userName\">User Name: {props.currentUser.userName}</h3> {/*Remove after auth done, just keep props. */}\r\n        </div>\r\n        <div className=\"card-body colorBody\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 text-center\">\r\n              <img className=\"img-fluid\" src=\"https://via.placeholder.com/250\" alt=\"profilePic\" /> {/* src={props.currentUser.profilePic} */}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <Link to=\"/myPlaces\"> \r\n                <h5>Places of interest</h5>\r\n              </Link>\r\n              <br></br>\r\n              <Link to=\"/myTopic\"> \r\n                <h5>Topics</h5>\r\n              </Link>\r\n              <br></br>\r\n              <div className=\"mainInfo\">\r\n                <h5 className=\"userInfo\">Name: {props.currentUser.name}</h5>\r\n                <br></br>\r\n                <h5 className=\"userInfo\">Email: {props.currentUser.email}</h5>\r\n                <br></br>\r\n                <h5 className=\"userInfo\">Phone: {props.currentUser.phone}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"general\">\r\n            <h5 className=\"userInfo\">General information:</h5>\r\n            <div className=\"card\">\r\n              <textarea id=\"generalInfo\" readOnly value={props.currentUser.generalInformation}>\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer colorFooter\">\r\n          {/*Left blank, to be filled in later?*/}\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInsert;","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport API from \"../components/utils/API\"\r\nimport ProfileInsert from \"../components/ProfileInsert\";\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n  function loadUser() {\r\n    API.getUser()\r\n    .then(function(result) {\r\n      setUser(result.data);\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ProfileInsert currentUser = {user}/>\r\n    </Wrapper>\r\n  )\r\n}\r\n  \r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass MyPlaces extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <p>MyPlaces</p>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default MyPlaces;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass MyTopics extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <p>MyTopics</p>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default MyTopics;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst iconPath = process.env.PUBLIC_URL + '/assets/ForumIcons/';\r\n\r\nfunction ForumInsert() {\r\n  return (\r\n    <div className=\"container forumPics\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/thingstodo\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"thingstodo.png\"} alt=\"thingstodo\" />\r\n            <h5 className=\"link\">Things To Do</h5> \r\n          </Link> \r\n        </div>\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/music\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"music.png\"} alt=\"music\" />\r\n            <h5 className=\"link\">Music</h5>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/news\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"news.png\"} alt=\"news\" />\r\n            <h5 className=\"link\">News</h5>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row secondRow\">\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/politics\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"politics.png\"} alt=\"politics\" />\r\n            <h5 className=\"link\">Politics</h5>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/pictures\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"pictures.png\"} alt=\"pictures\" />\r\n            <h5 className=\"link\">Pictures</h5>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-4 text-center\">\r\n          <Link to=\"/forums/recipes\" >\r\n            <img className=\"img-fluid\" src={iconPath + \"food.png\"} alt=\"recipes\" />\r\n            <h5 className=\"link\">Recipes</h5>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForumInsert;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport ForumInsert from \"../../components/ForumInsert\";\r\n\r\nclass Forum extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <ForumInsert />\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default Forum;","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport API from \"../../components/utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Subforum = () => {\r\n  const [topics, setTopics] = useState([])\r\n  const category = window.location.href.split(\"forums/\");\r\n\r\n  useEffect(() => {\r\n    getTopics()\r\n  }, [])\r\n\r\n  function getTopics() {\r\n    const category = window.location.href.split(\"forums/\");\r\n    API.getTopics(category[1])\r\n    .then(function(result) {\r\n      setTopics(result.data);\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container\">\r\n        <br></br>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <Link to=\"/forums/\" >\r\n              <h5>Back to Forums</h5>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-sm-6 text-right\">\r\n            <Link to={\"/forums/\" + category[1] + \"/post/topic\"} >\r\n              <h5>Post New Topic</h5>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        {topics.map(element => (\r\n          <div key={element.id}>\r\n            <div className=\"card\">\r\n              <div className=\"card-header colorHeader\">\r\n                <h3>{element.title}</h3>\r\n              </div>\r\n              <div className=\"card-body colorBody\">\r\n                <div>\r\n                  {element.description} {/* Limit to certain amount of letters show full description when expanded */}\r\n                </div>\r\n                <br></br>\r\n              </div>\r\n              <div className=\"card-footer colorFooter\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6\">\r\n                    <p>Posted by: {element.User.userName}</p>\r\n                  </div>\r\n                  <div className=\"col-sm-6 text-right\">\r\n                    <Link to={{\r\n                      pathname: \"/forums/\" + category[1] + \"/\" + element.title,\r\n                      state: {\r\n                        topic: element\r\n                        }\r\n                      }} >\r\n                      <h5>Comments</h5> {/* Add comment numbers after comment section complete */}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n  \r\nexport default Subforum;","import React from \"react\";\r\nimport API from \"../../components/utils/API\";\r\n\r\nfunction PostComment(props) {\r\n\r\n  const submitComment = (event) => {\r\n    event.preventDefault();\r\n    \r\n    document.getElementById(\"missingDescription\").value = \"\";\r\n\r\n    // Getting references from inputs\r\n    var commentInput = document.getElementById(\"description-input\").value;\r\n    \r\n    const data = {\r\n      description: commentInput,\r\n      topicId: props.id\r\n    }\r\n\r\n    if(commentInput === \"\") {\r\n      document.getElementById(\"missingDescription\").innerHTML = \"Comment cannot be empty\";\r\n      return;\r\n    }\r\n\r\n    API.newComment(data)\r\n    .then(function(result) {\r\n      console.log(result);\r\n      document.getElementById(\"description-input\").value = \"\";\r\n      document.getElementById(\"missingDescription\").value = \"\";\r\n      window.location.reload(); /*Change to reload component later*/\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header text-center colorHeaderComment\">\r\n          <h5>New Comment</h5>\r\n        </div>\r\n        <div className=\"card-body colorBodyComment\">\r\n          <form className=\"posttopic\">\r\n            <div className=\"form-group\">\r\n              <textarea id=\"description-input\" className=\"input form-control\" type=\"text\" required placeholder=\"Text goes here...\"/>\r\n              <p id=\"missingDescription\"></p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button onClick={submitComment} className=\"btn btn-primary\">\r\n                Post Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    <br></br>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostComment;","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../components/utils/API\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport PostComment from \"../../components/PostComment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Topic = (props) => {\r\n  const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadComments()\r\n  }, [])\r\n\r\n  function loadComments() {\r\n    API.getComments(props.location.state.topic.id)\r\n    .then(function(result) {\r\n      setComments(result.data);\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container\">\r\n        <br></br>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <Link to={\"/forums/\" + props.match.params.handle} >\r\n              <h5>Back</h5>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-sm-6 text-right\">\r\n            {/* <Link to={\"/forums\" + topic[1] + \"/post/comment\"} >\r\n              <p>Post New Comment</p>\r\n            </Link> */} {/* make this a link to the comment box below the title */}\r\n          </div>\r\n        </div>\r\n        <div key={props.location.state.topic.id}>\r\n          <div className=\"card\">\r\n            <div className=\"card-header colorHeader\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                  <h3>{props.location.state.topic.title}</h3>\r\n                </div>\r\n                <div className=\"col-sm-6 text-right\">\r\n                  <p>Posted by: {props.location.state.topic.User.userName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body colorBody\">\r\n              <div>\r\n                {props.location.state.topic.description} {/* Limit to certain amount of letters show full description when expanded */}\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n        <div className=\"container\">\r\n          {comments.map(element => (\r\n            <div key={element.id}>\r\n              <div className=\"card\">\r\n                <div className=\"card-header colorFooter\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <h5>{element.User.userName}</h5>\r\n                    </div>\r\n                    <div className=\"col-sm-6 text-right\">\r\n                      <p>Posted at: {element.createdAt}</p> {/* refine this */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body colorBody\">\r\n                  <div>\r\n                    {element.description}\r\n                  </div>\r\n                  <br></br>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n          <br></br>\r\n          {/* adding a comment to the topic */}\r\n          <PostComment id={props.location.state.topic.id}/>\r\n        </div>\r\n      </div>  \r\n    </Wrapper>\r\n  )\r\n}\r\n  \r\nexport default Topic;","import React from \"react\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../components/utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostTopic = () => {\r\n  let history = useHistory();\r\n\r\n  // Getting previous topic location for history push (always going to be the same http layout)\r\n  const forum = window.location.href.split(\"/post/\");\r\n  const topic = forum[0].split(\"/forums/\")\r\n\r\n  const submitTopic = (event) => {\r\n    event.preventDefault();\r\n\r\n    document.getElementById(\"missingTitle\").innerHTML = \"\";\r\n    document.getElementById(\"missingDescription\").innerHTML = \"\"\r\n\r\n    // Getting references from inputs\r\n    var titleInput = document.getElementById(\"title-input\").value;\r\n    var descriptionInput = document.getElementById(\"description-input\").value;\r\n    \r\n    const data = {\r\n      title: titleInput,\r\n      description: descriptionInput,\r\n      category: topic[1]\r\n    }\r\n\r\n    if(data.title === \"\" || data.title === \"Topic needs title\") {\r\n      document.getElementById(\"missingTitle\").innerHTML = \"Topic needs title\";\r\n      return;\r\n    }\r\n\r\n    if(data.description === \"\" || data.description === \"Topic needs description\") {\r\n      document.getElementById(\"missingDescription\").innerHTML = \"Topic needs description\";\r\n      return;\r\n    }\r\n\r\n    API.newTopic(data)\r\n    .then(function(result) {\r\n      console.log(result);\r\n      history.push(\"/forums/\" + topic[1]);\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <br></br>\r\n      <div className=\"container\">\r\n        <Link to={\"/forums/\" + topic[1]} >\r\n          <h5>Back</h5>\r\n        </Link>\r\n        <div className=\"card\">\r\n          <div className=\"card-header text-center\">\r\n            New Topic\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"posttopic\">\r\n              <br></br>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title-input\">Title</label>\r\n                <input id=\"title-input\" className=\"input form-control\" type=\"text\" required placeholder=\"Topic title...\"/>\r\n                <p id=\"missingTitle\"></p>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description-input\">Description</label>\r\n                <textarea id=\"description-input\" className=\"input form-control\" type=\"text\" required placeholder=\"Text goes here...\"/>\r\n                <p id=\"missingDescription\"></p>\r\n              </div>\r\n              <br></br>\r\n              <div className=\"text-center\">\r\n                <button onClick={submitTopic} className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PostTopic;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport \"./style.css\";\r\n\r\nfunction UserInsert(props) {  \r\n  let history = useHistory();\r\n\r\n  function chatting(event) {\r\n    const data = {\r\n      currentUser: props.currentUser\r\n    }\r\n    API.newChat(data)\r\n    .then(function(result) {\r\n      console.log(result);\r\n      history.push(\"/chats\");\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n      // redirect if the chatbox already exists\r\n      // history.push(\"/chats\");\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container mainWin\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header colorHeader text-center\">\r\n          <h3 id=\"userName\">User Name: {props.currentUser.userName}</h3> {/*Remove after auth done, just keep props. */}\r\n        </div>\r\n        <div className=\"card-body colorBody\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 text-center\">\r\n              <img className=\"img-fluid\" src=\"https://via.placeholder.com/250\" alt=\"profilePic\" /> {/* src={props.currentUser.profilePic} */}\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <button onClick={chatting}>Start Chatting</button>\r\n              <br></br>\r\n              <div className=\"mainInfo\">\r\n                <h5 className=\"userInfo\">Name: {props.currentUser.name}</h5>\r\n                <br></br>\r\n                <h5 className=\"userInfo\">Email: {props.currentUser.email}</h5>\r\n                <br></br>\r\n                <h5 className=\"userInfo\">Phone: {props.currentUser.phone}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"general\">\r\n            <h5 className=\"userInfo\">General information:</h5>\r\n            <div className=\"card\">\r\n              <textarea id=\"generalInfo\" readOnly value={props.currentUser.generalInformation}>\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer colorFooter\">\r\n          {/*Left blank, to be filled in later?*/}\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInsert;","import React, { useState, useEffect } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport API from \"../components/utils/API\"\r\nimport UserInsert from \"../components/UserProfiles\";\r\n\r\nconst OtherUsers = () => {\r\n  const [user, setUser] = useState([])\r\n\r\n  const userProfile = window.location.href.split(\"profile/\");\r\n  \r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n  function loadUser() {\r\n    API.getProfile(userProfile[1])\r\n    .then(function(result) {\r\n      setUser(result.data);\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  //make a new profile insert below as to add start chatting button\r\n  return (\r\n    <Wrapper>\r\n      <UserInsert currentUser = {user}/> \r\n    </Wrapper>\r\n  )\r\n}\r\n  \r\nexport default OtherUsers;","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Marker, MarkerClusterer, InfoWindow } from \"@react-google-maps/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\n// https://codesandbox.io/s/react-google-maps-api-ir5ks marker code\r\n\r\nconst poiPath = process.env.PUBLIC_URL + '/assets/CategoryIcons/';\r\nconst userPath = process.env.PUBLIC_URL + '/assets/UserIcons/';\r\n\r\nconst MapContent = (props) => {\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [infoOpen, setInfoOpen] = useState(false);\r\n  const [markerMap, setMarkerMap] = useState({});\r\n  const [myPlaces, setMyPlaces] = useState();\r\n\r\n  // variable to hold which group the user wants to view (users, PoI, etc..)\r\n  let iconSelection = props.value; \r\n\r\n  useEffect(() => {\r\n    getMarkers()\r\n  }, [])\r\n\r\n  const getMarkers = () => {\r\n    API.getAllMarkers()\r\n    .then(function(result) {\r\n      setMyPlaces(result.data)\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const markerClickHandler = (event, place) => {\r\n    // Remember which place was clicked\r\n    setSelectedPlace(place);\r\n    // Required so clicking a 2nd marker closes the first infobox\r\n    if (infoOpen) {\r\n      setInfoOpen(false);\r\n    }\r\n    setInfoOpen(true);\r\n  }\r\n\r\n  const markerLoadHandler = (marker, place) => {\r\n    return setMarkerMap(prevState => {\r\n      return { ...prevState, [place.lat]: marker }; // not the best fix but staying for now (lat instead of id)\r\n    });\r\n  };\r\n\r\n  // function to load user markers\r\n  const displayMarkers = (place, clusterer, icon) => {\r\n    return (\r\n      <Marker\r\n        key={place.lat}\r\n        position={{lat: parseFloat(place.lat), lng: parseFloat(place.lng)}}\r\n        onLoad={marker => markerLoadHandler(marker, place)}\r\n        onClick={event => markerClickHandler(event, place)}\r\n        clusterer={clusterer}\r\n        icon={icon}\r\n      /> \r\n    )\r\n  }\r\n  \r\n  if(myPlaces) {\r\n    return (\r\n      <Fragment>\r\n        <MarkerClusterer >\r\n          {clusterer => {\r\n            return (\r\n              myPlaces.map(place => {\r\n                // saved for use with the list to show certain icons\r\n                switch(iconSelection) {\r\n                  case \"all\":\r\n                    if(place.userName) {\r\n                      let icon = userPath + \"online.png\";\r\n                      // for custom icons when implemented\r\n                      // let iconUser = userPath + place.icon;\r\n                      return displayMarkers(place, clusterer, icon);\r\n                    }\r\n                    else {\r\n                      let icon = poiPath + place.category + \".png\";\r\n                      return displayMarkers(place, clusterer, icon);\r\n                    }\r\n\r\n                  case \"users\":\r\n                    if(place.userName) {\r\n                      let icon = userPath + \"online.png\";\r\n                    // for custom icons when implemented\r\n                    // let iconUser = userPath + place.icon;\r\n                      return displayMarkers(place, clusterer, icon);\r\n                    }\r\n                    break;\r\n\r\n                  case \"poi\":\r\n                    if(place.category) {\r\n                      let icon = poiPath + place.category + \".png\";\r\n                      return displayMarkers(place, clusterer, icon);\r\n                    }\r\n                    break;\r\n\r\n                  case iconSelection:\r\n                    if(place.category === iconSelection) {\r\n                      let icon = poiPath + place.category + \".png\";\r\n                      return displayMarkers(place, clusterer, icon);\r\n                    }\r\n                    break;\r\n\r\n                  default:\r\n                    return false;\r\n                }\r\n                return true;\r\n              })\r\n            );\r\n          }}\r\n        </MarkerClusterer>\r\n        {infoOpen && selectedPlace && (\r\n          <InfoWindow\r\n            anchor={markerMap[selectedPlace.lat]} /*Find a unique number as lat could repeat*/\r\n            onCloseClick={() => setInfoOpen(false)}\r\n          >\r\n            <div>\r\n              {selectedPlace.userName ? <Link to={\"/profile/\" + selectedPlace.userName}>Go To Profile</Link> : null}\r\n              <h4>{selectedPlace.title || selectedPlace.userName}</h4>\r\n              <div>{selectedPlace.description || selectedPlace.generalInformation}</div>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n  else {\r\n    return <Marker />\r\n  }\r\n}\r\n\r\nexport default MapContent;","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Marker, InfoWindow } from \"@react-google-maps/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\nconst MapOnline = () => {\r\n  let history = useHistory();\r\n\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [infoOpen, setInfoOpen] = useState(false);\r\n  const [markerMap, setMarkerMap] = useState({});\r\n  const [user, setUser] = useState()\r\n\r\n  useEffect(() => {\r\n    userPosition()\r\n  }, [])\r\n\r\n  const userPosition = () => {\r\n    if(navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        setUser(\r\n          {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n            zoom: 10\r\n          });\r\n      }, \r\n      setUser(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n          zoom: 3\r\n        })\r\n      )\r\n    }\r\n    // incase the browser doesn't support navigator\r\n    else {\r\n      setUser(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n        });\r\n    }\r\n  }\r\n\r\n  const markerClickHandler = (event, online) => {\r\n    setSelectedPlace(online);\r\n    if (infoOpen) {\r\n      setInfoOpen(false);\r\n    }\r\n    setInfoOpen(true);\r\n  }\r\n\r\n  const online = {\r\n    // add another field \"icon\" or \"iconPath\" to determine it PoI or Online marker\r\n    id: \"OnlineMarker\", \r\n    pos: user\r\n  };\r\n\r\n  const markerLoadHandler = (marker, online) => {\r\n    return setMarkerMap(prevState => {\r\n      return { ...prevState, [online.id]: marker };\r\n    });\r\n  };\r\n\r\n  // Onclick function for button\r\n  const setOnline = () => {\r\n    const data = {\r\n      lat: online.pos.lat,\r\n      lng: online.pos.lng\r\n    }\r\n\r\n    API.setOnlineMarker(data)\r\n    .then(function(result) {\r\n      history.push('/mapType/map')\r\n    }) // If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Marker\r\n        key={online.id}\r\n        position={online.pos}\r\n        onLoad={marker => markerLoadHandler(marker, online)}\r\n        onClick={event => markerClickHandler(event, online)}\r\n        draggable={true}\r\n        onDragEnd={event => setUser({lat: event.latLng.lat(), lng: event.latLng.lng()})}\r\n        // Not required, but if you want a custom icon:\r\n        // icon={}\r\n      />\r\n      {infoOpen && selectedPlace && (\r\n        <InfoWindow\r\n          anchor={markerMap[selectedPlace.id]}\r\n          onCloseClick={() => setInfoOpen(false)}\r\n        >\r\n          <div>\r\n            <h3 className=\"text-center\">Set Marker Here?</h3>\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-success\" onClick={setOnline}>Go Online</button>\r\n            </div>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MapOnline;","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Marker, InfoWindow } from \"@react-google-maps/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\nconst MapPoI = () => {\r\n  let history = useHistory();\r\n\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [infoOpen, setInfoOpen] = useState(false);\r\n  const [markerMap, setMarkerMap] = useState({});\r\n  const [user, setUser] = useState()\r\n\r\n  useEffect(() => {\r\n    userPosition()\r\n  }, [])\r\n\r\n  const userPosition = () => {\r\n    if(navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        setUser(\r\n          {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n            zoom: 10\r\n          });\r\n      }, \r\n      setUser(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n          zoom: 3\r\n        })\r\n      )\r\n    }\r\n    // incase the browser doesn't support navigator\r\n    else {\r\n      setUser(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n        });\r\n    }\r\n  }\r\n\r\n  const markerClickHandler = (event, online) => {\r\n    setSelectedPlace(online);\r\n    if (infoOpen) {\r\n      setInfoOpen(false);\r\n    }\r\n    setInfoOpen(true);\r\n  }\r\n\r\n  const online = {\r\n    // add another field \"icon\" or \"iconPath\" to determine it PoI or Online marker\r\n    id: \"OnlineMarker\", \r\n    pos: user\r\n  };\r\n\r\n  const markerLoadHandler = (marker, online) => {\r\n    return setMarkerMap(prevState => {\r\n      return { ...prevState, [online.id]: marker };\r\n    });\r\n  };\r\n\r\n  // Onclick function for button\r\n  const setPoI = (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      title: document.getElementById(\"title-input\").value,\r\n      description: document.getElementById(\"description-input\").value,\r\n      category: document.getElementById(\"category-input\").value.replace(/ +/g, \"\"),\r\n      lat: online.pos.lat,\r\n      lng: online.pos.lng\r\n    }\r\n\r\n    API.setPoIMarker(data)\r\n    .then(function(result) {\r\n      history.push('/mapType/map')\r\n    }) // If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Marker\r\n        key={online.id}\r\n        position={online.pos}\r\n        onLoad={marker => markerLoadHandler(marker, online)}\r\n        onClick={event => markerClickHandler(event, online)}\r\n        draggable={true}\r\n        onDragEnd={event => setUser({lat: event.latLng.lat(), lng: event.latLng.lng()})}\r\n        // Not required, but if you want a custom icon:\r\n        // icon={}\r\n      />\r\n      {infoOpen && selectedPlace && (\r\n        <InfoWindow\r\n          anchor={markerMap[selectedPlace.id]}\r\n          onCloseClick={() => setInfoOpen(false)}\r\n        >\r\n          <div>\r\n            <div className=\"text-center\">\r\n              <form className=\"setPoIMarker\"> \r\n                <label htmlFor=\"title-input\"><h5>Title</h5></label>\r\n                <input  id=\"title-input\" className=\"input form-control\" type=\"text\" required placeholder={\"Title....\"}/>\r\n                <label htmlFor=\"description-input\"><h5>Description</h5></label>\r\n                <textarea className=\"input form-control\" id=\"description-input\" type=\"text\" required placeholder={\"Description....\"}/>\r\n                <label htmlFor=\"category-input\"><h5>Category</h5></label>\r\n                <select id=\"category-input\" className=\"input form-control\" required>\r\n                  <option>Food</option>\r\n                  <option>Park</option>\r\n                  <option>Shop</option>\r\n                  <option>View Point</option>\r\n                </select>\r\n                <br></br>\r\n                <div className=\"text-center\">\r\n                  <div className=\"buttons\">\r\n                  <button className=\"btn btn-success\" onClick={setPoI}>Place Marker</button>\r\n                  </div>  \r\n                </div>\r\n                <br></br>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MapPoI;","import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap } from \"@react-google-maps/api\";\r\nimport MapContent from \"../MapContent\";\r\nimport MapOnline from \"../MapOnline\";\r\nimport MapPoI from \"../MapPoI\";\r\nimport \"./style.css\";\r\n\r\n// https://github.com/lauriharpf/shipwrecks/blob/master/src/main/js/map/Map.js <- fucking legend\r\n\r\nconst GoogleMaps = () => { \r\n  const [center, setCenter] = useState();\r\n  const [icons, setIcons] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    showPosition()\r\n  }, [])\r\n\r\n  function showPosition() {\r\n    if(navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        setCenter(\r\n          {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n            zoom: 10\r\n          });\r\n      }, \r\n      setCenter(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n          zoom: 3\r\n        })\r\n      )\r\n    }\r\n    // incase the browser doesn't support navigator\r\n    else {\r\n      setCenter(\r\n        {\r\n          lat: -33.8688,\r\n          lng: 151.2093,\r\n        });\r\n    }\r\n  }\r\n\r\n  let map;\r\n  const onMapLoad = loadedMap => (map = loadedMap);\r\n  const centerChanged = () =>\r\n    map && setCenter({ lat: map.center.lat(), lng: map.center.lng() });\r\n\r\n  // Determine which map content to load\r\n  const mapType = window.location.href.split(\"/mapType/\")\r\n\r\n  const selectMarkers = () => {\r\n    const selection = document.getElementById(\"selectionTab\").value;\r\n    setIcons(selection);\r\n  } \r\n \r\n  if(mapType[1] === \"map\") {\r\n    return (\r\n      <div id=\"main\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <select id=\"selectionTab\" onChange={selectMarkers}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"users\">Users</option>\r\n            <option value=\"poi\">Points of Interest</option>\r\n            <option value=\"Food\">- Food</option>\r\n            <option value=\"Shop\">- Shops</option>\r\n            <option value=\"Park\">- Parks</option>\r\n            <option value=\"ViewPoint\">- View Points</option>\r\n          </select>\r\n        </div>\r\n        <GoogleMap\r\n          id=\"map\"\r\n          zoom={10}\r\n          center={center}\r\n          onLoad={onMapLoad}\r\n          onCenterChanged={centerChanged}\r\n        > \r\n          <MapContent value={icons} />\r\n        </GoogleMap>\r\n      </div>\r\n    );\r\n  }\r\n  else if(mapType[1] === \"setOnline\") {\r\n    return (\r\n      <GoogleMap\r\n        id=\"map\"\r\n        zoom={10}\r\n        center={center}\r\n        onLoad={onMapLoad}\r\n        onCenterChanged={centerChanged}\r\n      >\r\n        <MapOnline />\r\n      </GoogleMap>\r\n    );\r\n  }\r\n  else if(mapType[1] === \"setPoI\") {\r\n    return (\r\n      <GoogleMap\r\n        id=\"map\"\r\n        zoom={10}\r\n        center={center}\r\n        onLoad={onMapLoad}\r\n        onCenterChanged={centerChanged}\r\n      >\r\n        <MapPoI />\r\n      </GoogleMap>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GoogleMaps;","import React, { Component } from 'react'\r\nimport { LoadScript } from '@react-google-maps/api'\r\nimport GoogleMaps from \"../components/GoogleMap\";\r\nimport \"./style.css\";\r\n\r\nclass MapComp extends Component {\r\n  render() {\r\n     return (\r\n      <LoadScript\r\n        id=\"script-loader\"\r\n        googleMapsApiKey=\"AIzaSyCPo2a9WyXNAIwuMBgu8AXuCatBsc17TSo\"\r\n      >\r\n        <GoogleMaps />\r\n      </LoadScript>\r\n     )\r\n  }\r\n}\r\n\r\nexport default MapComp","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ChatBox(props) {\r\n  return ( \r\n    <div className=\"row outline pointer\" value={props.user.chatName} data-id={props.user.id} onClick={props.onClick}> \r\n      {/* <div className=\"col-md-3 remove-padding d-flex justify-content-middle\">\r\n        <img src=\"...\" alt=\"profile\" id=\"profilePic\"></img>\r\n      </div>\r\n      <div className=\"col-md-9\"> */}\r\n        <div className=\"card-title text-center pointer\">\r\n          {props.user.user1 !== props.current ? props.user.user1 : props.user.user2}\r\n        </div>\r\n        <div className=\"card-body remove-padding pointer\">\r\n          <div className=\"card-text text-center pointer\">\r\n            Last message sent\r\n          </div>\r\n          <div className=\"card-text text-muted text-center pointer\">\r\n            Time of last message\r\n          </div>\r\n        </div>\r\n      {/* </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatBox;","import React from \"react\";\r\nimport API from \"../utils/API\";\r\nimport io from \"socket.io-client\";\r\nimport \"./style.css\";\r\n\r\nfunction ChatMessage(props) {\r\n\r\n  let currentUser;\r\n\r\n  // api call to load messages\r\n  function messageHistory() {\r\n    API.getMessages(props.id)\r\n    .then(function(result) {\r\n      console.log(result, \"RESULT\");\r\n      // function to display results in message area\r\n      currentUser = result.data.id;\r\n      displayMessages(result.data)\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  // function to display results in message area\r\n  function displayMessages(data) {\r\n    const area = document.getElementById('messages');\r\n    data.messages.map(element => {\r\n      let li = document.createElement('li');\r\n      let span = document.createElement('span');\r\n      span.innerHTML = element.message\r\n      if(element.UserId === data.id) {\r\n        li.setAttribute(\"class\", \"current\");\r\n        span.setAttribute(\"class\", \"sent\");\r\n      }\r\n      else {\r\n        li.setAttribute(\"class\", \"other\");\r\n        span.setAttribute(\"class\", \"received\");\r\n      }\r\n      li.append(span);\r\n      area.append(li);\r\n\r\n      return true;\r\n    })\r\n  }  \r\n\r\n  // detect if the room has changed when user clicks on chat box\r\n  let x = {\r\n    roomInternal: props.active,\r\n    roomListener: function(val) {},\r\n    set room(val) {\r\n      this.roomInternal = val;\r\n      this.roomListener(val);\r\n    },\r\n    get room() {\r\n      return this.roomInternal;\r\n    },\r\n    registerListener: function(listener) {\r\n      this.roomListener = listener;\r\n    }\r\n  }\r\n  \r\n  // socket.io connection with room query\r\n  // let socket = io( process.env.PORT || 'localhost:3001', {query: 'r_var=' + x.room});\r\n  let socket = io(process.env.PORT || 'localhost:3001');\r\n\r\n  // register to listen to the x variable\r\n  if(typeof x.roomInternal !== \"undefined\") {\r\n    x.registerListener(function(val) {\r\n      socket.emit('join', x.room);\r\n      socket.emit('changeRoom');\r\n      if(document.getElementById('messages')) {\r\n        document.getElementById('messages').innerHTML = \"\";\r\n      }\r\n      messageHistory();\r\n    });\r\n  }\r\n  \r\n  // reset x.room to the clicked on room\r\n  x.room = props.active;\r\n\r\n  // add api put to add the message to the specific chat model\r\n  function sendMessage(event) {\r\n    event.preventDefault();\r\n    // Put API route to save message to the current chat\r\n    const data = {\r\n      message: document.getElementById('m').value,\r\n      id: props.id\r\n    }\r\n\r\n    API.sendMessage(data)\r\n    .then(function(result) {\r\n      console.log(\"success\");\r\n    })\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n\r\n    let msg = {\r\n      message: document.getElementById('m').value,\r\n      user: currentUser\r\n    }\r\n\r\n    // socket emit\r\n    socket.emit('chat message', msg);\r\n    document.getElementById('m').value='';\r\n  }\r\n\r\n  socket.on('chat message', function(msg){\r\n    // console.log(msg, \"CLIENT\");\r\n    let area = document.getElementById('messages');\r\n    let li = document.createElement('li');\r\n    let span = document.createElement('span');\r\n    span.innerHTML = msg.message;\r\n    if(msg.user === currentUser) {\r\n      li.setAttribute(\"class\", \"current\");\r\n      span.setAttribute(\"class\", \"sent\");\r\n    }\r\n    else {\r\n      li.setAttribute(\"class\", \"other\");\r\n      span.setAttribute(\"class\", \"received\");\r\n    }\r\n    li.append(span);\r\n    area.append(li);\r\n  });\r\n    \r\n  return ( \r\n    <div>\r\n      <div className=\"displayArea\">\r\n        <ul id=\"messages\">\r\n          {/* Area to display messages */}\r\n        </ul> \r\n      </div>\r\n      <div className=\"row send\">\r\n        <div className=\"col-lg-12 remove-padding\">\r\n          <div className=\"input-group\">\r\n            <form id=\"form\" action=\"\">\r\n              <input id=\"m\" autoComplete=\"off\" /><button onClick={sendMessage}>Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatMessage;","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../components/utils/API\";\r\nimport ChatBox from \"../ChatBox\";\r\nimport ChatMessage from \"../ChatMessage\";\r\nimport \"./style.css\";\r\n\r\nfunction ChatArea() {\r\n  const [chats, setChats] = useState([])\r\n  const [logged, setLogged] = useState();\r\n  const [active, setActive] = useState();\r\n  const [chatId, setChatId] = useState();\r\n\r\n  // api call to get all active chats\r\n  useEffect(() => {\r\n    loadChats()\r\n  }, [])\r\n\r\n  function loadChats() {\r\n    API.getChats()\r\n    .then(function(result) {\r\n      console.log(result);\r\n      setLogged(result.data.logged.userName)\r\n      setChats(result.data.chats);\r\n    }) // If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function activate(event) {\r\n    setActive(event.currentTarget.getAttribute(\"value\"));\r\n    setChatId(event.currentTarget.getAttribute(\"data-id\"));\r\n  }\r\n\r\n  return ( \r\n    <div>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card chatArea\">\r\n            <div className=\"card-header text-center\">\r\n              CURRENT ACTIVE CHATS\r\n            </div>\r\n            <div className=\"card-body\" id=\"chatboxes\">\r\n              {chats.map(element => (\r\n                <ChatBox key={element.id} user={element} current={logged} onClick={activate} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card chatArea\">\r\n            <div className=\"card-body remove-padding \">\r\n                {/* component to display the messages */}\r\n                {/* click on the chat box will trigger api call and show all messages between the two users */}\r\n                <ChatMessage active={active} id={chatId}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatArea;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport ChatArea from \"../components/ChatArea\";\r\n\r\n// https://github.com/ninesystems/node-chat-one-to-one\r\n\r\nclass Chats extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <ChatArea />\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default Chats;","import React, { Component } from \"react\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <p>Search</p>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default Search;","import React from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction UserSettings(props) {\r\n  let history = useHistory();\r\n\r\n  function sumbitUpdate(event) {\r\n    event.preventDefault();\r\n\r\n    var nameInput = document.getElementById(\"name-input\");\r\n    var phoneInput =  document.getElementById(\"phoneNumber-input\");\r\n    var infoInput = document.getElementById(\"information-input\");\r\n\r\n    // Keep current values if not there is no input\r\n    if(nameInput.value === \"\") {\r\n      nameInput.value = props.currentUser.name;\r\n    } \r\n    if (phoneInput.value === \"\") {\r\n      phoneInput.value = props.currentUser.phone;\r\n    }\r\n    if (infoInput.value === \"\") {\r\n      infoInput.value = props.currentUser.generalInformation;\r\n    }\r\n\r\n    var userData = {\r\n      name: nameInput.value.trim(),\r\n      phone: phoneInput.value.trim(),\r\n      generalInformation: infoInput.value.trim()\r\n    }\r\n    console.log(userData);\r\n\r\n    updateUser(userData);    \r\n  }\r\n\r\n  function updateUser(userData) {\r\n    API.updateUser(userData)\r\n    .then(function() {\r\n      history.push('/profile')\r\n    }) // If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // Function for handling what happens when the delete button is pressed\r\n  function handleDelete(event) {\r\n    event.preventDefault();\r\n    API.deleteUser(\"/api/user\")\r\n    .then(history.push('/'));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container update\">\r\n      <div className=\"card\">\r\n        <h2 className=\"text-center card-header colorHeader\">\r\n          Update User\r\n        </h2>\r\n        <div className=\"card-body colorBody\">\r\n          <form className=\"update-user\"> \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"name-input\"><h5>Name</h5></label>\r\n                <input  id=\"name-input\" className=\"input form-control\" type=\"text\" required placeholder={props.currentUser.name}/>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"phoneNumber-input\"><h5>Phone Number</h5></label>\r\n                <input className=\"input form-control\" id=\"phoneNumber-input\" type=\"number\" required placeholder={props.currentUser.phone}/>\r\n                <br></br>\r\n              </div>\r\n            </div> \r\n            <div className=\"form-row\">  \r\n              <div className=\"form-group col-md-12\">\r\n                <label htmlFor=\"information-input\"><h5>General Information</h5></label>\r\n                <textarea id=\"information-input\" className=\"input form-control\" type=\"text\" placeholder={props.currentUser.generalInformation}/> \r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"text-center\">\r\n              <div className=\"buttons\">\r\n                <button onClick={sumbitUpdate} className=\"btn btn-primary\">\r\n                  Update\r\n                </button>\r\n                &emsp;\r\n                <button onClick={handleDelete} className=\"btn btn-danger delete-user\">\r\n                  Delete User\r\n                </button>\r\n              </div>  \r\n            </div>\r\n            <br></br>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSettings;","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../components/utils/API\"\r\nimport UserSettings from \"../components/UserSettings\";\r\nimport Wrapper from \"../components/Wrapper\";\r\n\r\nconst Settings = () => {\r\n\r\n  const [user, setUser] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n  function loadUser() {\r\n    API.getUser()\r\n    .then(function(result) {\r\n      console.log(result);\r\n      setUser(result.data);\r\n    })// If there's an error, log the error\r\n    .catch(function(err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <UserSettings currentUser = {user}/>\r\n    </Wrapper>\r\n  )\r\n}\r\n  \r\nexport default Settings;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return ( \r\n    <div id=\"footer\">\r\n      <div className=\"row justify-content-center\">\r\n        <p id=\"copyname\">Edward Coad <span id=\"copyright\">&copy;2019</span></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StoreProvider } from \"./components/utils/GlobalState\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Header from \"./components/Header\";\nimport Description from \"./pages/Description\";\n\n//Profile pages\nimport Profile from \"./pages/Profile\";\nimport MyPlaces from \"./pages/MyPlaces\";\nimport MyTopics from \"./pages/MyTopics\";\n\n//Forum pages\nimport Forum from \"./pages/Forum/Forum\";\nimport Subforum from \"./pages/Forum/Subforum\";\nimport Topic from \"./pages/Forum/Topic\";\nimport PostTopic from \"./pages/Forum/PostTopic\"\n\nimport OtherUsers from \"./pages/OtherUsers\";\nimport MapComp from \"./pages/Mapcomp\";\nimport Chats from \"./pages/Chats\";\nimport Search from \"./pages/Search\";\nimport Settings from \"./pages/Settings\";\n// import NoMatch from \"./pages/NoMatch\";\nimport Footer from \"./components/Footer\";\nimport \"./style.css\";\n\n// Making so the navbar does not appear on the login/register page\nconst NavRoutes = () => {\n\n  // wrap everything in authentication and redirect to login if not logged in\n  return (\n    <div className=\"App Site\">\n      <Header />\n      <div className=\"Site-content\">\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/profile/:user\" component={OtherUsers} />\n        <Route exact path=\"/forums\" component={Forum} />\n        <Route exact path=\"/forums/:handle\" component={Subforum} />\n        <Route exact path=\"/forums/:handle/:topic\" component={Topic} />\n        <Route exact path=\"/forums/:handle/post/topic\" component={PostTopic} />\n        <Route exact path=\"/myPlaces\" component={MyPlaces} />\n        <Route exact path=\"/myTopics\" component={MyTopics} />\n        <Route exact path=\"/mapType/:map\" component={MapComp} />\n        <Route exact path=\"/chats\" component={Chats} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/settings\" component={Settings} />\n        <Route exact path=\"/description\" component={Description} />\n        {/* <Route path=\"*\" component={NoMatch} /> */}\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <StoreProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route component={NavRoutes} />\n        </Switch>\n      </StoreProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}